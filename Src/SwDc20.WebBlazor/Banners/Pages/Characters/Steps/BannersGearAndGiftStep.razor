@using SwDc20.WebBlazor.Banners.Models

<EditForm Model="Character" OnValidSubmit="OnValidSubmit">
    <DataAnnotationsValidator />

    <div class="gear-section">
        <h4>Gear</h4>
        <table class="table table-active table-striped table-sm">
            <thead>
            <tr>
                <th>Gear</th>
                <th>Description</th>
                <th>Fine Quality</th>
                <th>Action</th>
            </tr>
            </thead>
            <tbody>
            @foreach (var gear in Character.Gear)
            {
                <tr>
                    <td>@gear.Name</td>
                    <td>@gear.Description</td>
                    <td>
                        <input type="checkbox" checked="@gear.IsFineQuality" disabled />
                    </td>
                    <td>
                        <button type="button" class="btn btn-danger btn-sm" @onclick="() => RemoveGear(gear)">
                            <i class="fas fa-times"></i>
                        </button>
                    </td>
                </tr>
            }
            </tbody>
        </table>
        
        <hr/>
        
        <div class="card">
            <div class="card-header">
                Add New Gear
            </div>
            <div class="card-body">
                <div class="row">
                    <div class="col-md-6 mb-3">
                        <label for="newGear" class="form-label">Name</label>
                        <input id="newGear" type="text" class="form-control" @bind="newGearName"/>
                    </div>

                    <div class="col-md-6 mb-3">
                        <label class="form-check-label">Fine Quality</label>
                        <input class="form-check-input" type="checkbox" @bind="newGearIsFineQuality"/>
                    </div>
                </div>
                <hr/>
                <div class="row">
                    <div class="form-floating">
                        <input id="newGearDescription" type="text" class="form-control" placeholder="Gear Description" @bind="newGearDescription"/>
                        <label for="newGearDescription" class="form-label">Description</label>
                    </div>
                </div>
            </div>
            <div class="card-footer">
                <button type="button" class="btn btn-outline-primary" @onclick="AddGear">Add Gear</button>
            </div>
        </div>
    </div>

    <hr/>

    <div class="mb-3">
        <label for="gift" class="form-label">Gift</label>
        <InputText id="gift" class="form-control" @bind-Value="Character.Gift" />
        <ValidationMessage For="@(() => Character.Gift)" />
    </div>

    <div class="d-flex justify-content-between mt-4">
        <button type="button" class="btn btn-secondary" @onclick="OnBack">Back</button>
        <button type="submit" class="btn btn-primary">Finish</button>
    </div>
</EditForm>

@code {
    [Parameter] public BannersCharacter Character { get; set; } = default!;
    [Parameter] public EventCallback OnValidSubmit { get; set; }
    [Parameter] public EventCallback OnBack { get; set; }

    private string newGearName = "";
    private string newGearDescription = "";
    private bool newGearIsFineQuality = false;
    private string newGiftName = "";

    private void AddGear()
    {
        if (string.IsNullOrEmpty(newGearName))
        {
            return;
        }
        
        Character.AddGear(newGearName, newGearDescription, newGearIsFineQuality);
        newGearName = "";
        newGearDescription = "";
        newGearIsFineQuality = false;
    }
    
    private void RemoveGear(BannersCharacterGear gear)
    {
        Character.RemoveGear(gear.Name);
    }
}