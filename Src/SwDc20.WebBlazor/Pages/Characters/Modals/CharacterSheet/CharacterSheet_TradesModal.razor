<div>
<button type="button" @onclick="OpenModal" class="btn btn-link p-1" aria-label="Attribute Settings">
        <i class="fa-solid fa-gear"></i>
    </button>

    @if (IsOpen)
    {
        <div class="modal show" style="display: block; background-color: rgba(0,0,0,0.5);" tabindex="-1">
            <div class="modal-dialog modal-dialog-centered">
                <div class="modal-content">
                    <div class="modal-header">
                        <h5 class="modal-title">Edit Trades</h5>
                        <button type="button" class="btn-close" @onclick="CloseModal"></button>
                    </div>
                    <div class="modal-body">
                        
                        @if (isAddingNewTrade)
                        {
                            <div class="mb-4 p-3 border rounded">
                                <h5>Add New Feature</h5>
                                <EditForm Model="@newTrade" OnValidSubmit="@HandleValidSubmit">
                                    <DataAnnotationsValidator/>
                                    <ValidationSummary/>
                                    
                                    <div class="row g-3">
                                        <div class="form-floating">
                                            <InputText id="tradeName" class="form-control" @bind-Value="newTrade.Name"/>
                                            <label for="tradeName" class="form-label">Name</label>
                                        </div>
                                        
                                        <div class="form-floating">
                                            <InputNumber id="tradeBonus" class="form-control" @bind-Value="newTrade.Bonus"/>
                                            <label for="tradeBonus" class="form-label">Bonus</label>
                                        </div>

                                        <div class="form-floating">
                                            <InputTextArea id="tradeDescription" class="form-control" @bind-Value="newTrade.Description" style="height: 100px"/>
                                            <label for="tradeDescription" class="form-label">Description</label>
                                        </div>

                                        <div class="d-flex gap-2">
                                            <button type="submit" class="btn btn-primary" @onclick="() => AddTrade(newTrade)">Save</button>
                                            <button type="button" class="btn btn-secondary" @onclick="CancelAdd">Cancel</button>
                                        </div>
                                    </div>
                                </EditForm>
                            </div>
                        }

                        <div class="mb-4">
                            <SaveButtonComponent OnSave="StartAddTrade">Add Trade</SaveButtonComponent>
                            @* <button type="button" class="btn btn-primary" @onclick="StartAddFeature">Add Feature</button> *@
                        </div>
                        
                        <hr/>
                        
                        <div class="row g-3">
                            @foreach (var trade in CurrentCharacter.Trades)
                            {
                                <div class="card col-md-12">
                                    <div class="card-header">
                                        <h5 class="card-title">
                                            <div class="form-floating">
                                                <InputText @bind-Value="trade.Name" class="form-control"/>
                                                <label>Name</label>
                                            </div>
                                        </h5>
                                    </div>
                                    <div class="card-body">
                                        <div class="row g-3">
                                            <div class="form-floating">
                                                <InputNumber id="@($"tradeBonus_{trade.Name}")" class="form-control" @bind-Value="trade.Bonus"/>
                                                <label for="@($"tradeBonus_{trade.Name}")">Bonus</label>
                                            </div>

                                            <div class="form-floating">
                                                <InputTextArea id="@($"tradeDescription_{trade.Name}")" class="form-control" @bind-Value="trade.Description" style="height: 100px"/>
                                                <label for="@($"tradeDescription_{trade.Name}")">Description</label>
                                            </div>
                                        </div>
                                        
                                    </div>
                                    <div class="card-footer">
                                        <button type="button" class="btn btn-sm btn-danger" @onclick="() => RemoveTrade(trade)">Remove</button>
                                    </div>
                                </div>
                            }
                        </div>
                        
                    </div>
                    <div class="modal-footer">
                        <button type="button" class="btn btn-secondary" @onclick="CloseModal">Cancel</button>
                        <SaveButtonComponent OnSave="SaveChanges" />
                    </div>
                </div>
            </div>
        </div>
    }
</div>

@code {
    [Parameter] public Character CurrentCharacter { get; set; }
    [Parameter] public EventCallback OnAttributesChanged { get; set; }
    
    private bool isAddingNewTrade = false;
    private Trade newTrade = new Trade();

    private bool IsOpen { get; set; }
    
    private void StartAddTrade()
    {
        newTrade = new();
        isAddingNewTrade = true;
    }
    
    private void OpenModal()
    {
        IsOpen = true;
    }

    private void CloseModal()
    {
        IsOpen = false;
    }

    private async Task SaveChanges()
    {
        await OnAttributesChanged.InvokeAsync();
        IsOpen = false;
    }
    
    private void CancelAdd()
    {
        isAddingNewTrade = false;
        newTrade = new();
    }
    
    private void AddTrade(Trade trade)
    {
        CurrentCharacter.Trades.Add(trade);
        newTrade = new Trade();
        isAddingNewTrade = false;
    }
    
    private void RemoveTrade(Trade trade)
    {
        CurrentCharacter.Trades.Remove(trade);
    }
    
    private void HandleValidSubmit()
    {
        CurrentCharacter.Trades.Add(newTrade);
        // await OnChanged.InvokeAsync();
        isAddingNewTrade = false;
        newTrade = new();
    }
}