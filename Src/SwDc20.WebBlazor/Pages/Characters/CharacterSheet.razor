@page "/character/{Id:guid}"
@inject CharacterService CharacterService
@inject NavigationManager NavigationManager

<h3>Character Sheet</h3>

@if (characterWrapper == null)
{
    <p>Loading...</p>
}
else
{
    <div class="character-sheet">
        <h4>@characterWrapper.Document.Name</h4>
        <p>Level @characterWrapper.Document.Level @characterWrapper.Document.Ancestry @characterWrapper.Document.Class (@characterWrapper.Document.Subclass)</p>

        <h5>Attributes</h5>
        <div class="row">
            <div class="col-md-3">Might: @characterWrapper.Document.Might</div>
            <div class="col-md-3">Agility: @characterWrapper.Document.Agility</div>
            <div class="col-md-3">Charisma: @characterWrapper.Document.Charisma</div>
            <div class="col-md-3">Intelligence: @characterWrapper.Document.Intelligence</div>
        </div>

        <h5>Skills</h5>
        <ul>
            @foreach (var skill in characterWrapper.Document.Skills)
            {
                <li>@skill.Name: +@skill.Bonus</li>
            }
        </ul>

        <h5>Trades</h5>
        <ul>
            @foreach (var trade in characterWrapper.Document.Trades)
            {
                <li>@trade.Name: +@trade.Bonus</li>
            }
        </ul>

        <h5>Languages</h5>
        <ul>
            @foreach (var language in characterWrapper.Document.Languages)
            {
                <li>@language.Name (@language.Proficiency)</li>
            }
        </ul>

        <h5>Class Features</h5>
        <ul>
            @foreach (var feature in characterWrapper.Document.ClassFeatures)
            {
                <li>@feature</li>
            }
        </ul>

        <h5>Equipment</h5>
        <ul>
            @foreach (var item in characterWrapper.Document.Equipment)
            {
                <li>@item</li>
            }
        </ul>

        <h5>Weapons</h5>
        <ul class="list-group">
            @foreach (var weapon in characterWrapper.Document.Weapons)
            {
                <li class="list-group-item">
                    <h6>@weapon.Name</h6>
                    <p>Damage: @weapon.Damage (@weapon.DamageType)</p>
                    <p>Description: @weapon.Description</p>
                    <p>Calculation: @weapon.Calculation</p>
                </li>
            }
        </ul>

        <p>Currency: @characterWrapper.Document.Currency</p>
    </div>


    <button class="btn btn-primary" @onclick="() => EditCharacter(Id)">Edit Character</button>
}

@code {
    [Parameter]
    public Guid Id { get; set; }

    private DocumentWrapper<Character> characterWrapper;

    protected override async Task OnInitializedAsync()
    {
        characterWrapper = await CharacterService.GetCharacterAsync(Id);
        if (characterWrapper == null)
        {
            NavigationManager.NavigateTo("/characters");
        }
    }

    private void EditCharacter(Guid id)
    {
        NavigationManager.NavigateTo($"/character/edit/{id}");
    }
}