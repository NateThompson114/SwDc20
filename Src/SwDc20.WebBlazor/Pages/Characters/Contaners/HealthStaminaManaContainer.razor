@using SwDc20.WebBlazor.Pages.Characters.Modals
<div class="card border-success" aria-roledescription="Health, Stamina, and Mana Container" aria-description="Container for your Max Hit Points, Stamina Point, and Mana Points.">
    <div class="card-header d-flex justify-content-between align-items-center">
        <h4>Health, Stamina, and Mana</h4>
        <HealthStaminaManaModal
            Character="@Character"
            OnAttributesChanged="@OnChanged"/>
    </div>
    <div class="card-body">
        <div class="row row-cols-lg-3 row-cols-md-6 row-cols-sm-auto">
            <div class="card">
                <div class="card-header">
                    <h5>Health @($"{Character.GetHitPoints()}/{Character.MaxHitPoints}")</h5>
                </div>
                <div class="card-body">
                    <div class="form-group">
                        <label for="maxHitPoints">Max</label>
                        <InputNumber id="maxHitPoints" class="form-control" @bind-Value="Character.MaxHitPoints" disabled="@(!CanEdit)" @bind-Value:after="OnResourceChanged"/>
                    </div>
                    <div class="form-group">
                        <label for="currentHitPoints">Current</label>
                        <InputNumber id="currentHitPoints" class="form-control" @bind-Value="Character.CurrentHp"@bind-Value:after="OnResourceChanged"/>
                    </div>
                    <div class="form-group">
                        <label for="temporaryHitPoints">Temp</label>
                        <InputNumber id="temporaryHitPoints" class="form-control" @bind-Value="Character.TemporaryHp" @bind-Value:after="OnResourceChanged"/>
                    </div>
                </div>
            </div>
            
            <div class="card">
                <div class="card-header">
                    <h5>Stamina @($"{Character.CurrentStamina}/{Character.MaxStaminaPoints}")</h5>
                </div>
                <div class="card-body">
                    <div class="form-group">
                        <label for="maxStaminaPoints">Max</label>
                        <InputNumber id="maxStaminaPoints" class="form-control" @bind-Value="Character.MaxStaminaPoints" disabled="@(!CanEdit)" @bind-Value:after="OnResourceChanged"/>
                    </div>
                    <div class="form-group">
                        <label for="currentStaminaPoints">Current</label>
                        <InputNumber id="currentStaminaPoints" class="form-control" @bind-Value="Character.CurrentStamina"@bind-Value:after="OnResourceChanged"/>
                    </div>
                </div>
            </div>
            
            <div class="card">
                <div class="card-header">
                    <h5>Mana @($"{Character.CurrentManaPoints}/{Character.MaxManaPoints}")</h5>
                </div>
                <div class="card-body">
                    <div class="form-group">
                        <label for="maxManaPoints">Max</label>
                        <InputNumber id="maxManaPoints" class="form-control" @bind-Value="Character.MaxManaPoints" disabled="@(!CanEdit)" @bind-Value:after="OnResourceChanged"/>
                    </div>
                    <div class="form-group">
                        <label for="currentManaPoints">Current</label>
                        <InputNumber id="currentManaPoints" class="form-control" @bind-Value="Character.CurrentManaPoints"@bind-Value:after="OnResourceChanged"/>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>

@code {
    [Parameter] public Character Character { get; set; }    
    [Parameter] public bool CanEdit { get; set; }
    [Parameter] public bool IsMobile { get; set; }
    [Parameter] public EventCallback OnChanged  { get; set; }

    private async Task OnResourceChanged()
    {
        await OnChanged.InvokeAsync(Character);
    }
}