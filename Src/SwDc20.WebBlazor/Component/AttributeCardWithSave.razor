<div class="col-md-2">
    <div class="card">
        <h4 class="card-header">@AttributeName</h4>
        <div class="card-body">
            <div class="form-floating">
                <InputNumber id="@AttributeName.ToLower()" @bind-Value="AttributeValue" @bind-Value:after="OnAttributeValueChanged" class="form-control" />
                <label for="@AttributeName.ToLower()">@AttributeName</label>
            </div>
        </div>
        <div class="card-footer">
            <div class="input-group">
                <span class="input-group-text">Save</span>
                <div class="input-group-text">
                    <InputCheckbox @bind-Value="SaveMastery"
                                   @bind-Value:after="OnSaveMasteryChanged"
                                   disabled="@(SelectedMasteriesCount >= 4 && !SaveMastery)"
                                   id="@SaveCheckboxId"
                                   class="form-check-input"/>
                </div>
                <span class="input-group-text">Value: @SaveValue</span>
            </div>
        </div>
    </div>
</div>

@code {
[Parameter]
public string AttributeName { get; set; }

[Parameter]
public int AttributeValue { get; set; }

[Parameter]
public EventCallback<int> AttributeValueChanged { get; set; }

[Parameter]
public bool SaveMastery { get; set; }

[Parameter]
public EventCallback<bool> SaveMasteryChanged { get; set; }

[Parameter]
public EventCallback UpdateSaveMasteries { get; set; }

[Parameter]
public int SelectedMasteriesCount { get; set; }

[Parameter]
public int SaveValue { get; set; }

private string SaveCheckboxId => $"save-{AttributeName.ToLower()}";

private async Task OnAttributeValueChanged()
{
await AttributeValueChanged.InvokeAsync(AttributeValue);
}

private async Task OnSaveMasteryChanged()
{
await SaveMasteryChanged.InvokeAsync(SaveMastery);
await UpdateSaveMasteries.InvokeAsync();
}
}